@model E_CommerceProject.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

<head>
    <link href="~/Content/Site.css" rel="stylesheet" />
</head>

@using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })





    <div class="container">
        <div class="row">
            <div class="col-lg-10 col-xl-9 mx-auto">
                <div class="card card-signin flex-row my-5">
                    <div class=" d-none d-md-flex">
                        <!-- Background image for card set in CSS! -->
                    </div>
                    <div class="card-body">
                        <h5 class="card-title text-left">Change Password</h5>
                        <form class="form-signin " >

                           

                            <div class="form-group">
                                @Html.LabelFor(model => model.OldPassword)
                                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.NewPassword)
                                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword)
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>


                            <button class="btn btn-lg btn-primary  text-uppercase" type="submit">Submit</button>
                             </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}